const xlg = require("../xlogger");
const { getGlobalSetting } = require("../dbmanager");
const emojiConversion = {
    "A": "ğŸ‡¦",
    "B": "ğŸ‡§",
    "C": "ğŸ‡¨",
    "D": "ğŸ‡©",
    "E": "ğŸ‡ª",
    "F": "ğŸ‡«",
    "G": "ğŸ‡¬",
    "H": "ğŸ‡­",
    "I": "ğŸ‡®",
    "J": "ğŸ‡¯",
    "K": "ğŸ‡°",
    "L": "ğŸ‡±",
    "M": "ğŸ‡²",
    "N": "ğŸ‡³",
    "O": "ğŸ‡´",
    "P": "ğŸ‡µ",
    "Q": "ğŸ‡¶",
    "R": "ğŸ‡·",
    "S": "ğŸ‡¸",
    "T": "ğŸ‡¹",
    "U": "ğŸ‡º",
    "V": "ğŸ‡»",
    "W": "ğŸ‡¼",
    "X": "ğŸ‡½",
    "Y": "ğŸ‡¾",
    "Z": "ğŸ‡¿",
}

module.exports = {
    name: "emojify",
    description: "convert text to emojies",
    usage: "<text>",
    args: true,
    async execute(client, message, args) {
        let textArray = args.join(" ").split("");
        let mappedText = [];
        for (let i = 0; i < textArray.length; i++) {
            const letter = textArray[i].toUpperCase();
            if (emojiConversion[letter]) {
                mappedText.push(`${emojiConversion[letter]}\u200b`);
            } else {
                mappedText.push(letter);
            }
        }
        if (mappedText.length < 1) {
            message.channel.send({
                embed: {
                    color: parseInt((await getGlobalSetting('fail_embed_color'))[0].value, 10),
                    description: "no emojified content"
                }
            }).catch(xlg.error);
            return false;
        }
        message.channel.send(mappedText.join("")).catch(xlg.error);
        return true;
    }
}